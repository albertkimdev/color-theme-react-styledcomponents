{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\Albert\\\\Documents\\\\BuiltByReact\\\\tutorials\\\\styledcolorscheme\\\\pages\\\\_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { createGlobalStyle } from \"styled-components\"; // const GlobalStyle = createGlobalStyle`\n//   /* * {\n//       padding: 0;\n//       margin: 0;\n//       box-sizing: border-box;\n//   }\n//   body {\n//       /* background: black; */\n//   } */\n// `;\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  return __jsx(React.Fragment, null, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  })));\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["C:/Users/Albert/Documents/BuiltByReact/tutorials/styledcolorscheme/pages/_app.js"],"names":["createGlobalStyle","MyApp","Component","pageProps"],"mappings":";;;;AAAA,SAASA,iBAAT,QAAkC,mBAAlC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,SAASC,KAAT,OAAyC;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;AACvC,SACE,4BAEE,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF;AAMD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAnBSF,K;AAqBT,eAAeA,KAAf","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\n// const GlobalStyle = createGlobalStyle`\r\n//   /* * {\r\n//       padding: 0;\r\n//       margin: 0;\r\n//       box-sizing: border-box;\r\n//   }\r\n\r\n//   body {\r\n//       /* background: black; */\r\n//   } */\r\n// `;\r\n\r\nfunction MyApp({ Component, pageProps }) {\r\n  return (\r\n    <>\r\n      {/* <GlobalStyle /> */}\r\n      <Component {...pageProps} />\r\n    </>\r\n  );\r\n}\r\n\r\n// Only uncomment this method if you have blocking data requirements for\r\n// every single page in your application. This disables the ability to\r\n// perform automatic static optimization, causing every page in your app to\r\n// be server-side rendered.\r\n//\r\n// MyApp.getInitialProps = async (appContext) => {\r\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\r\n//   const appProps = await App.getInitialProps(appContext);\r\n//\r\n//   return { ...appProps }\r\n// }\r\n\r\nexport default MyApp;\r\n"]},"metadata":{},"sourceType":"module"}