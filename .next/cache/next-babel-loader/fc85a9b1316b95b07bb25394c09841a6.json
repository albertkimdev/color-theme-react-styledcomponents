{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Albert\\\\Documents\\\\BuiltByReact\\\\tutorials\\\\styledcolorscheme\\\\pages\\\\_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { createGlobalStyle } from \"styled-components\";\nconst GlobalStyle = createGlobalStyle`\n  /* * {\n      padding: 0;\n      margin: 0;\n      box-sizing: border-box;\n  }\n\n  body {\n      /* background: black; */\n  } */\n`;\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  return __jsx(React.Fragment, null, __jsx(GlobalStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  })));\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/Albert/Documents/BuiltByReact/tutorials/styledcolorscheme/pages/_app.js"],"names":["createGlobalStyle","GlobalStyle","MyApp","Component","pageProps"],"mappings":";;;;;;AAAA,SAASA,iBAAT,QAAkC,mBAAlC;AAEA,MAAMC,WAAW,GAAGD,iBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;;AAYA,SAASE,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACvC,SACE,4BACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF;AAMD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeF,KAAf","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  /* * {\r\n      padding: 0;\r\n      margin: 0;\r\n      box-sizing: border-box;\r\n  }\r\n\r\n  body {\r\n      /* background: black; */\r\n  } */\r\n`;\r\n\r\nfunction MyApp({ Component, pageProps }) {\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <Component {...pageProps} />\r\n    </>\r\n  );\r\n}\r\n\r\n// Only uncomment this method if you have blocking data requirements for\r\n// every single page in your application. This disables the ability to\r\n// perform automatic static optimization, causing every page in your app to\r\n// be server-side rendered.\r\n//\r\n// MyApp.getInitialProps = async (appContext) => {\r\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\r\n//   const appProps = await App.getInitialProps(appContext);\r\n//\r\n//   return { ...appProps }\r\n// }\r\n\r\nexport default MyApp;\r\n"]},"metadata":{},"sourceType":"module"}